server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;

        # Disable caching
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
        add_header Expires 0 always;
    }

    # Root directory for your frontend
    # root /usr/share/nginx/html;


    # location = /50x.html {
    #     root   /usr/share/nginx/html;
    # }

    # index index.html;

    # # üö´ Disable caching for HTML, CSS, JS
    # location ~* \.(html|css|js)$ {
    #     add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0";
    #     add_header Pragma "no-cache";
    #     add_header Expires "0";
    #     try_files $uri =404;
    # }

    # # ‚úÖ Serve other static files (images, fonts, etc.)
    # location / {
    #     try_files $uri $uri/ /index.html;
    # }


    # # üîÅ Proxy API requests to Flask backend
    # location /api/ {
    #     proxy_pass http://localhost:5000/;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;

    #     # ‚úÖ Allow CORS for API
    #     add_header Access-Control-Allow-Origin *;
    #     add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    #     add_header Access-Control-Allow-Headers "Content-Type, Authorization";

    #     if ($request_method = OPTIONS ) {
    #         return 204;
    #     }
    # }

    # # ‚úÖ Optional: Handle .well-known to silence Chrome DevTools errors
    # location /.well-known/ {
    #     return 204;
    # }

    # Optional: Logging
    # access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log;
}